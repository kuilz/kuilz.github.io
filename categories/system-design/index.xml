<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>System Design on Kui's Blog</title><link>https://kuilz.github.io/categories/system-design/</link><description>Recent content in System Design on Kui's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><lastBuildDate>Mon, 13 May 2024 21:24:09 +0800</lastBuildDate><atom:link href="https://kuilz.github.io/categories/system-design/" rel="self" type="application/rss+xml"/><item><title>设计模式——单例模式</title><link>https://kuilz.github.io/blog/2024/05/design_pattern_singleton_pattern/</link><pubDate>Mon, 13 May 2024 21:24:09 +0800</pubDate><author>kuilz</author><guid>https://kuilz.github.io/blog/2024/05/design_pattern_singleton_pattern/</guid><description><![CDATA[
        <p>这篇文章本来还是按照<a href="https://kuilz.github.io/blog/2024/05/design_pattern_strategy_pattern/">上一篇</a>的风格写的，但发现太耗费精力的，于是变成了最简单粗暴的版本。后面需要学会在有趣与直接、丰富与简洁之间找到平衡。</p>
<p><strong>单例模式（Singleton Pattern）是一种设计模式，[&hellip;] <a href="https://kuilz.github.io/blog/2024/05/design_pattern_singleton_pattern/">https://kuilz.github.io/blog/2024/05/design_pattern_singleton_pattern/</a></strong></p>
        
        ]]></description></item><item><title>设计模式——策略模式</title><link>https://kuilz.github.io/blog/2024/05/design_pattern_strategy_pattern/</link><pubDate>Fri, 10 May 2024 16:26:22 +0800</pubDate><author>kuilz</author><guid>https://kuilz.github.io/blog/2024/05/design_pattern_strategy_pattern/</guid><description><![CDATA[
        <h2 id="前言">前言</h2>
<p>最近闲暇时在看<a href="https://book.douban.com/subject/35097022/">《Head First Design Pattern》</a>这本书，感觉蛮有意思的，不妨记录一下。</p>
<p>叠甲：笔者才疏学浅，水平有限，错漏之处，欢迎指出。</p>
<h2 id="正文">正文</h2>
<p>面向对象设计有几个基本特性：[&hellip;] <a href="https://kuilz.github.io/blog/2024/05/design_pattern_strategy_pattern/">https://kuilz.github.io/blog/2024/05/design_pattern_strategy_pattern/</a></p>
        
        ]]></description></item></channel></rss>